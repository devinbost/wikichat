version: "0.4.12"

networks:
  langflow-network:
    driver: bridge

services:
  langflow:
    build:
      context: .
      dockerfile: Dockerfile.langflow
    ports:
      - "7860:7860"
    depends_on:
      - postgres
    environment:
      - LANGFLOW_DATABASE_URL=postgresql://langflow:langflow@postgres:5432/langflow
      - LANGFLOW_LANGCHAIN_CACHE=InMemoryCache
      - LANGFLOW_WORKERS=1
      - LANGFLOW_BACKEND_ONLY=true
      - LANGFLOW_STORE_ENVIRONMENT_VARIABLES=true
      - LANGFLOW_VARIABLES_TO_GET_FROM_ENVIRONMENT=ASTRA_DB_TOKEN,ASTRA_DB_DATABASE_ID,OPENAI_KEY,OPENAI_API_KEY,OPEN_API_KEY,ASTRA_ENDPOINT,MYSQL_USER,MYSQL_PASSWORD,MYSQL_DB,MYSQL_HOST
    volumes:
      - langflow-data:/app/langflow
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7860/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - langflow-network

  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: langflow
      POSTGRES_PASSWORD: langflow
      POSTGRES_DB: langflow
    ports:
      - "5432:5432"
    volumes:
      - langflow-postgres:/var/lib/postgresql/data
    networks:
      - langflow-network

  nextjs-app:
    build:
      context: .
      dockerfile: Dockerfile.app
    ports:
      - "3000:3000"
    depends_on:
      - langflow
    networks:
      - langflow-network

volumes:
  langflow-postgres:
  langflow-data: